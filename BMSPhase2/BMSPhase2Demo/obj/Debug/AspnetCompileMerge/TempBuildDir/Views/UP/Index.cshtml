@model PagedList.IPagedList<BMSPhase2Demo.Models.UP>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<div class="row">
    <div class="col-lg-12 text-center">
        @if (ViewBag.Message != null)
        {
            <p class="well text-warning"> Message: @ViewBag.Message </p>
        }
    </div>
</div>
@using (Html.BeginForm("Index", "UP", FormMethod.Post))
{
    if (!System.Web.HttpContext.Current.User.IsInRole("Bonder"))
    {
        <table class="table table-striped table-bordered ">
            <tr>

                <th id="search-th">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().UPNO):
                </th>
                <td id="search-td">
                    @Html.TextBox("UPNO", ViewBag.CurrentFilterUP as string, new { @class = "form-control" })
                </td>
                <th id="search-th">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().BONDER.BONDERNAME):
                </th>
                <td id="search-td">
                    @Html.DropDownList("BONDERID", null, "-- Select Bonder --", new { @class = "form-control" })

                </td>
            </tr>
        </table>

        <button type="submit" name="submit" class="btn btn-primary">Search</button>
    }
}
<p>
    @Html.ActionLink("Create New", "Create", "", new { @class = "action-link" })
</p>
@if ((short)ViewBag.resultofbonderID > 0)
{
    string names = BMSPhase2Demo.Utils.BonderInfoUtils.getBonderName((short)ViewBag.resultofbonderID);
    <p style="padding-left: 350px;" class="well text-success"> Result showing for Bonder: @names </p>
}
<div class="row">
    <div class="col-lg-12">
        <div class="table-responsive">
            <table class="table">
                <tr id="tr">
                    <th id="th">
                        @Html.DisplayNameFor(model => model.FirstOrDefault().UPNO)
                    </th>
                    <th id="th">
                        @Html.DisplayName("Approved By")
                    </th>
                    <th id="th">
                        @Html.DisplayName("Approved Date")
                    </th>

                    <th id="th">Action</th>
                </tr>
                @{int i = 0; string trgb = "#c1deef";}

                @foreach (var item in Model)
                {
                    i++;
                    if (i % 2 == 0) { trgb = "#e6ebee"; }
                    else { trgb = "#c1deef"; }
                    <tr style="background: @trgb">
                        <td id="td">
                            @Html.DisplayFor(modelItem => item.UPNO)
                        </td>
                        <td id="td">
                            @Html.DisplayFor(modelItem => item.CREATEDBY)
                        </td>
                        <td id="td">
                            @Html.DisplayFor(modelItem => item.CREATEDDATE)
                        </td>

                        <td id="td">
                            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>
</div>
<p>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount </p>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilterUP = ViewBag.CurrentFilterUP, filterBonderId = ViewBag.filterBonderId }))
