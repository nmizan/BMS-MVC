@model PagedList.IPagedList<BMSPhase2Demo.Models.APPUSER>
@using PagedList.Mvc;
@using BMSPhase2Demo.Util;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<h3 class="text-center">User Information</h3>
@if (!System.Web.HttpContext.Current.User.IsInRole("Bonder"))
{
    using (Html.BeginForm("Index", "AppUser", FormMethod.Post))
    {
        <table class="table table-striped table-bordered ">
            <tr>
                <th id="search-th">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().USERNAME):
                </th>
                <td id="search-td">
                    @Html.TextBox("user", ViewBag.CurrentFilterUser as string, new { @class = "form-control" })
                </td>

                <th id="search-th">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().FIRSTNAME):
                </th>
                <td id="search-td">
                    @Html.TextBox("firstname", ViewBag.CurrentFilterFirstname as string, new { @class = "form-control" })
                </td>
                <th id="search-th">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().LASTNAME):
                </th>
                <td id="search-td">
                    @Html.TextBox("lastname", ViewBag.CurrentFilterLastname as string, new { @class = "form-control" })
                </td>
            </tr>

        </table>
        <button type="submit" name="submit" class="btn btn-primary">Search</button>
    }
}
@if (!System.Web.HttpContext.Current.User.IsInRole("Bonder"))
{
    <p>
        @Html.ActionLink("Create a New User", "Create", "", new { @class = "action-link" })
    </p>
}
<table class="table table-striped table-bordered ">
    <tr id="tr">
        <th id="th">
            @Html.DisplayNameFor(model => model.FirstOrDefault().USERNAME)
        </th>
        <th id="th">
            @Html.DisplayNameFor(model => model.FirstOrDefault().FIRSTNAME)
        </th>
        <th id="th">
            @Html.DisplayNameFor(model => model.FirstOrDefault().LASTNAME)
        </th>
        <th id="th">
            @Html.DisplayNameFor(model => model.FirstOrDefault().EMAIL)
        </th>
        <th id="th">
            @Html.DisplayNameFor(model => model.FirstOrDefault().PHONE)
        </th>
        <th id="th">
            @Html.DisplayNameFor(model => model.FirstOrDefault().ADDRESS)
        </th>
        <th id="th">
            @Html.DisplayNameFor(model => model.FirstOrDefault().ISACTIVE)
        </th>
        <th id="th">
            @Html.DisplayNameFor(model => model.FirstOrDefault().LASTLOGIN)
        </th>
        <th></th>
    </tr>
    @{int i = 0; string trgb = "#c1deef";}
    @foreach (var item in Model)
    {
        i++;
        if (i % 2 == 0) { trgb = "#e6ebee"; }
        else { trgb = "#c1deef"; }
        <tr style="background: @trgb">
            <td id="td">
                @Html.DisplayFor(modelItem => item.USERNAME)
            </td>
            <td id="td">
                @Html.DisplayFor(modelItem => item.FIRSTNAME)
            </td>
            <td id="td">
                @Html.DisplayFor(modelItem => item.LASTNAME)
            </td>
            <td id="td">
                @Html.DisplayFor(modelItem => item.EMAIL)
            </td>
            <td id="td">
                @Html.DisplayFor(modelItem => item.PHONE)
            </td>
            <td id="td">
                @Html.DisplayFor(modelItem => item.ADDRESS)
            </td>
            <td id="td">
                @if (item.ISACTIVE == 1)
                {
                    <span>Active</span>
                }
                else
                {
                    <span>Inactive</span>
                }
            </td>
            <td id="td">
                @Html.DisplayFor(modelItem => item.LASTLOGIN)
            </td>
            <td id="td">
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "action-link" }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }, new { @class = "action-link" })|
                @if (!System.Web.HttpContext.Current.User.IsInRole("Bonder"))
                {
                    SessionAttributeRetreival session = new SessionAttributeRetreival();
                    if (session.getStoredUserPermission() != null && session.getStoredUserPermission().APPUSER.ID != item.ID)
                    {
                        <span> @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "action-link" }) |</span>
                    }
                    <span>@Html.ActionLink("Manage Permission", "Create", "UserPermission", item, new { id = item.ID, @class = "action-link" })</span>
                }

            </td>
        </tr>
    }

</table>

@if (Model.PageCount > 1)
{
    <p>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount </p>

    @Html.PagedListPager(Model, page => Url.Action("Index",
                                                    new { page, currentFilterUser = ViewBag.CurrentFilterUser, currentFilterFirstName = ViewBag.CurrentFilterFirstname, currentFilterLastname = ViewBag.CurrentFilterLastname }))
}