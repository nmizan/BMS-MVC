@model PagedList.IPagedList<BMSPhase2Demo.Models.EXBOND>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Exbond Selector";
}

<h2>Exbond Selector</h2>
<p style="color: red; padding-left:350px;">@ViewBag.error</p>
@Html.ValidationMessage("fileError")
@using (Html.BeginForm("Create", "UPRequest", FormMethod.Post))
{
    if (!System.Web.HttpContext.Current.User.IsInRole("Bonder"))
    {
        <table class="table table-striped table-bordered ">
            <tr>

                <th id="search-th">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().BONDER.BONDERNAME):
                </th>
                <td id="search-td">
                    @Html.DropDownList("BONDERID", null, "-- Select Bonder --", new { @class = "form-control" })

                </td>
            </tr>
        </table>

        <button type="submit" name="submit" class="btn btn-primary">Search</button>
    }
}
@if ((short)ViewBag.resultofbonderID > 0)
{
    string names = BMSPhase2Demo.Utils.BonderInfoUtils.getBonderName((short)ViewBag.resultofbonderID);
    <p style="padding-left: 350px;" class="well text-success"> Result showing for Bonder: @names </p>
}
@using (Html.BeginForm("createOrEditRequest", "UPRequest", FormMethod.Post, new { EncType = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-lg-12">
            <div class="table-responsive">
                <table class="table">
                    <tr id="tr">
                        <th id="th">
                            @Html.DisplayName("Select")
                        </th>
                        <th id="th">
                            @Html.DisplayNameFor(model => model[0].ID)

                        </th>
                        <th id="th">
                            @Html.DisplayNameFor(model => model[0].BONDER.BONDERNAME)
                        </th>
                        <th id="th">
                            @Html.DisplayName("No of LC")
                        </th>

                    </tr>


                    @{int j = 0; string trgb = "#c1deef";}
                    @for (int i = 0; i < Model.Count(); i++)
                    {

                        j++;
                        if (i % 2 == 0) { trgb = "#e6ebee"; }
                        else { trgb = "#c1deef"; }

                        <tr style="background: @trgb">
                            <td id="td">
                                @Html.CheckBoxFor(modelItem => Model[i].IsSelected)
                                @Html.HiddenFor(modelItem => Model[i].ID)

                            </td>
                            <td id="td">
                                @Html.DisplayFor(modelItem => Model[i].ID)
                            </td>
                            <td id="td">
                                @Html.DisplayFor(modelItem => Model[i].BONDER.BONDERNAME)
                            </td>

                            <td id="td">
                                @Model[i].EXBONDBACKTOBACKs.Count()
                            </td>

                        </tr>

                    }

                </table>
            </div>
        </div>
    </div>
    <table>
        <tr>
            <td colspan="3" class="col-lg-7">
                <ul id="attachment" style="list-style-type: none; padding-left: 0px;">
                    <li style=" display: inline-block;">
                    </li>
                </ul>
            </td>

            <td class="col-lg-3"></td>


        </tr>
        <tr>
            <td class="col-lg-4"></td>
            <td>
                <input type="button" name="addRawMaterial" class="btn btn-info" id="addRawMaterial" value="Add Attachment" onclick='addNewRow();' />
            </td>
            <td class="col-lg-4"></td>
        </tr>
    </table>

    @Html.Hidden("ID", (short)ViewBag.requestID)
    <div class="row" style="margin-top: 10px;">
        <div class="col-lg-4"></div>
        <div class="col-lg-4">

            @if (ViewBag.requestID > 0)
            {
                <button type="submit" name="submit" class="btn btn-primary">Add</button>
            }
            else
            {

                <button type="submit" name="submit" class="btn btn-primary">Create Request</button>
            }
        </div>
        <div class="col-lg-4"></div>
    </div>


}
<p>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount </p>

@Html.PagedListPager(Model, page => Url.Action("Create", new { page, filterBonderId = ViewBag.filterBonderId }))
<script>
    function addNewRow() {

        $.get('/UpRequest/AttachmentEntryRow', function (template) {
            $("#attachment").append(template);
        });
    };
</script>